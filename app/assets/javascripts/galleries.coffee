$(document).on 'turbolinks:load', ->
  initGallery()
  initGalleryImages()
  $('.chocolat-parent').Chocolat();
  
$(document).on 'change', '#gallery_image, #gallery_images_images', ->
  icon = $('#gallery-image-icon')
  icon.toggleClass 'fa-picture-o fa-check-square-o'
  icon.css 'color': 'green';
    
$(document).on 'click', '.sort-by-button-group', ->
  $grid = $('.gallery-grid')
  sortValue = $(this).attr('data-sort-value')
  ascending = $(this).attr('data-ascending')
  mode = if ascending == 'false' then true else false
  $grid.isotope
    sortBy: sortValue
    sortAscending: mode
    
$(document).on 'click', '.delete-gallery-button', -> 
  target = $(@).data('modal')
  $('#'+target).modal('open');

$(document).on 'click', '.delete-gallery-image-button', -> 
  $(@).hide();
  $(@).siblings('.delete-gallery-image-confirmation').show()
  
$(document).on 'click', '.delete-gallery-image-button-no', -> 
  $(@).parent().hide();
  $(@).parent().siblings('.delete-gallery-image-button').show()
  
initGallery= ->
  $grid = $('.gallery-grid').imagesLoaded(->
      # init Isotope after all images have loaded
      $grid.isotope
        itemSelector: '.gallery-grid-item'
        masonry: percentPosition: true
        stamp: '.stamp'
        getSortData:
          created_at: '[data-created-at]'
    )
    
initGalleryImages= ->
  $grid = $('.gallery-image-grid').isotope(
    itemSelector: '.gallery-grid-image-item'
    percentPosition: true
    masonry: columnWidth: '.gallery-image-grid-sizer')
    
  # layout Isotope after each image loads
  $grid.imagesLoaded().progress ->
    $grid.isotope 'layout'
    return
    
###
# Welcome to the new js2coffee 2.0, now
# rewritten to use the esprima parser.
# try it out!
###

$ ->
  ul = $('#upload ul')
  # Helper function that formats the file sizes

  formatFileSize = (bytes) ->
    if typeof bytes != 'number'
      return ''
    if bytes >= 1000000000
      return (bytes / 1000000000).toFixed(2) + ' GB'
    if bytes >= 1000000
      return (bytes / 1000000).toFixed(2) + ' MB'
    (bytes / 1000).toFixed(2) + ' KB'

  $('#drop a').click ->
    # Simulate a click on the file input button
    # to show the file browser dialog
    $(this).parent().find('input').click()
    return
  # Initialize the jQuery File Upload plugin
  $('#upload').fileupload
    dropZone: $('#drop')
    add: (e, data) ->
      tpl = $('<li class="working"><input type="text" value="0" data-width="48" data-height="48"' + ' data-fgColor="#0788a5" data-readOnly="1" data-bgColor="#3e4043" /><p></p><span></span></li>')
      # Append the file name and file size
      tpl.find('p').text(data.files[0].name).append '<i>' + formatFileSize(data.files[0].size) + '</i>'
      # Add the HTML to the UL element
      data.context = tpl.appendTo(ul)
      # Initialize the knob plugin
      tpl.find('input').knob()
      # Listen for clicks on the cancel icon
      tpl.find('span').click ->
        if tpl.hasClass('working')
          jqXHR.abort()
        tpl.fadeOut ->
          tpl.remove()
          return
        return
      # Automatically upload the file once it is added to the queue
      jqXHR = data.submit()
      return
    progress: (e, data) ->
      # Calculate the completion percentage of the upload
      progress = parseInt(data.loaded / data.total * 100, 10)
      # Update the hidden input field and trigger a change
      # so that the jQuery knob plugin knows to update the dial
      data.context.find('input').val(progress).change()
      if progress == 100
        data.context.removeClass 'working'
      return
    fail: (e, data) ->
      # Something has gone wrong!
      data.context.addClass 'error'
      return
  # Prevent the default action when a file is dropped on the window
  $(document).on 'drop dragover', (e) ->
    e.preventDefault()
    return
  return

# ---
# generated by js2coffee 2.2.0
